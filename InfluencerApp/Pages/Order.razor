@page "/order/{orderId?}"
@using InfluencerApp.Model.Login;
@inject NavigationManager Navigation

<PageTitle>Store</PageTitle>

<h1>Store</h1>
<hr class="mb-5" />
@*
@if (_productChunksOf4 is not null)
{
    foreach (var chunkedProducts in _productChunksOf4)
    {
        <div class="row mb-5">
            @foreach (var product in chunkedProducts)
            {
                <div class="col-sm-3 mb-5 mb-sm-0">
                    <div class="card" style="width: 18rem;">
                        <img src="@product.ImageUrl" class="card-img-top">
                        <div class="card-body">
                            <h5 class="card-title fw-bold">@product.Title</h5>
                            <p class="card-text">@product.Description</p>
                            <h5 class="mb-4"><strong>$@(product.Price / 100)</strong></h5>
                            <button @onclick="() => OnClickBtnBuyNowAsync(product)" class="btn btn-dark btn-lg d-block">BUY NOW</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
}
else
{
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
}
*@



<h3>Project</h3>

<EditForm Model="@_LoginModel" OnValidSubmit="logIn">
    <div class="container">
        <div class="form-group">
            <label>Influencer 1</label>
        </div>
        <div class="form-group mt-2">
            <label>Date and Time</label>
        </div>
        <div class="form-group mt-2">
            <label>Services:</label>
        </div>
        <div class="form-group mt-2">
            <label>Service</label>
            <label>Amount</label>
        </div>
        <div class="form-group mt-2">
            <label>Add-Ons:</label>
        </div>
        <div class="form-group mt-2">
            <label>Service</label>
            <label>Amount</label>
        </div>
        <div class="form-group mt-2">
            <label>Total</label>
            <label>Amount</label>
        </div>
        <div class="form-group mt-2">
            <label>Vat</label>
            <label>Amount</label>
        </div>
        <div class="form-group mt-4">
            <label>GRAND TOTAL</label>
            <label>AMOUNT</label>
        </div>
        <div class="d-flex flex-row mt-2">
            <div class="d-flex justify-content-between">
                <button class="btn btn-primary" type="submit">
                    <span class="@_spinnerClass" role="status" aria-hidden="true"></span>
                    Payment
                </button>
@*                <NavLink class="nav-link" href="@($"/service/{influencerId}")">
                    <span>Review</span>
                </NavLink>*@
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public string orderId { get; set; }

    LoginModel _LoginModel = new();
    private string _spinnerClass = "";

    private async void logIn()
    {
        _spinnerClass = "spinner-border spinner-border-sm";
        await App.Current.MainPage.DisplayAlert("Success", "Your Order is received!", "OK");
        Navigation.NavigateTo("/");
    }
}